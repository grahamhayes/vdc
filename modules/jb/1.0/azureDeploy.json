{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "deployment-prefix": {
            "type": "string",
            "metadata": {
                "description": "Deployment prefix. E.g. Organization-DeploymentType"
            }
        },
        "oms-workspace-id": {
            "type": "securestring",
            "metadata": {
                "description": "WorkspaceId or CustomerId value of OMS. This value is referenced in OMS VM Extension"
            }
        },
        "oms-primary-shared-key": {
            "type": "securestring",
            "metadata": {
                "description": "WorkspaceKey value of OMS. This value is referenced in OMS VM Extension"
            }
        },
        "kv-uri": {
            "type": "securestring",
            "metadata": {
                "description": "AKV URI"
            }
        },
        "kv-id": {
            "type": "securestring",
            "metadata": {
                "description": "AKV Resource Id"
            }
        },
        "aad-principal-id": {
            "type": "securestring",
            "defaultValue": "",
            "metadata": {
                "description": "Azure Active Directory Service Principal ID"
            }
        },
        "aad-certificate-thumb": {
            "type": "securestring",
            "defaultValue": "",
            "metadata": {
                "description": "Azure Active Directory Thumbprint"
            }
        },
        "aad-certificate-url": {
            "type": "securestring",
            "defaultValue": "",
            "metadata": {
                "description": "Azure Active Directory Certificate URL. Certificate gets installed in the VMs"
            }
        },
        "jb-key": {
            "type": "securestring",
            "defaultValue": "",
            "metadata": {
                "description": "Jumpbox AKV encryption key"
            }
        },
        "vnet-id": {
            "type": "string",
            "metadata": {
                "description": "Shared services Virtual Network resource Id"
            }
        },
        "vnet-resourceGroup": {
            "type": "string",
            "metadata": {
                "description": "Shared services Virtual Network resource group"
            }
        },
        "jb-asg-name": {
            "type": "string",
            "metadata": {
                "description": "Jumpbox ASG Name"
            }
        },
        "shared-services-subnet-name": {
            "type": "string",
            "metadata": {
                "description": "Name of Shared Services Subnet, this name is used to get the SubnetId"
            }
        },
        "extension-name": {
            "type": "string",
            "metadata": {
                "description": "Name of the extension deployment."
            }
        },
        "admin-username": {
            "type": "string",
            "metadata": {
                "description": "The username used to establish jumpbox VMs."
            }
        },
        "admin-password": {
            "type": "securestring",
            "metadata": {
                "description": "The password given to the admin user."
            }
        },
        "windows-virtualMachine-count": {
            "type": "int",
            "defaultValue": 1,
            "metadata": {
                "description": "Number of jumpbox VMs to be created."
            }
        },
        "windows-virtualMachine-size": {
            "type": "string",
            "metadata": {
                "description": "Size of the jumpbox VMs."
            }
        },
        "windows-os-type": {
            "type": "string",
            "defaultValue": "Windows",
            "allowedValues": [
                "Windows"
            ],
            "metadata": {
                "description": "OS platform of the jumpbox VM image."
            }
        },
        "windows-os-image": {
            "type": "object",
            "metadata": {
                "description": "OS image used for the jumpbox VMs."
            }
        },
        "linux-virtualMachine-count": {
            "type": "int",
            "defaultValue": 1,
            "metadata": {
                "description": "Number of linux jumpbox VMs to be created."
            }
        },
        "linux-virtualMachine-size": {
            "type": "string",
            "metadata": {
                "description": "Size of the jumpbox VMs."
            }
        },
        "linux-os-type": {
            "type": "string",
            "defaultValue": "Linux",
            "allowedValues": [
                "Linux"
            ],
            "metadata": {
                "description": "OS platform of the jumpbox VM image."
            }
        },
        "linux-os-image": {
            "type": "object",
            "metadata": {
                "description": "OS image used for the jumpbox VMs."
            }
        },
        "enable-encryption": {
            "type": "bool",
            "metadata": {
                "description": "Indicates whether or not to encrypt the VM disks"
            }
        },
        "encryption-secrets": {
            "type": "array",
            "defaultValue": [
                {
                    "sourceVault": {
                        "id": "[parameters('kv-id')]"
                    },
                    "vaultCertificates": [
                        {
                            "certificateUrl": "[parameters('aad-certificate-url')]",
                            "certificateStore": "My"
                        }
                    ]
                }
            ]
        },
        "storageAccount-name": {
            "type": "string",
            "metadata": {
                "description": "Diagnostic Storage Account name"
            }
        },
        "storageAccount-sasToken": {
            "type": "securestring",
            "metadata": {
                "description": "Diagnostic Storage Account SAS token"
            }
        },
        "storageAccount-resourceId": {
            "type": "securestring",
            "metadata": {
                "description": "Log Analytics workspace resource identifier"
            }
        }
    },
    "variables": {
        "resource-prefix": "[concat(parameters('deployment-prefix'), '-', parameters('extension-name'))]",
        "uniqueString": "[uniqueString(subscription().id, resourceGroup().id, concat(parameters('deployment-prefix'), '-jb'))]",
        "windows-availabilitySet-name": "[concat(variables('resource-prefix'), '-win-as')]",
        "windows-virtualMachine-name-prefix": "[concat(variables('resource-prefix'), '-win-vm')]",
        "linux-virtualMachine-name-prefix": "[concat(variables('resource-prefix'), '-linux-vm')]",
        "linux-availabilitySet-name": "[concat(variables('resource-prefix'), '-linux-as')]",
        "subnet-id": "[concat(parameters('vnet-id'), '/subnets/', parameters('shared-services-subnet-name'))]",
        "antimalware-extension-name": "IaaSAntimalware",
        "diagnostics-extension-name": "IaaSDiagnostics",
        "networkWatcher-extension-name": "NetworkWatcher",
        "encryption-extension-name": "AzureDiskEncryption",
        "encryption-operation": "EnableEncryption",
        "mma-extension-name": "OMSExtension",
        "key-encryptionAlgorithm": "RSA-OAEP",
        "empty-array": [],
        "jb-asg-id": "[resourceId(parameters('vnet-resourceGroup'),'Microsoft.Network/applicationSecurityGroups', concat(parameters('deployment-prefix'), '-', parameters('jb-asg-name'), '-asg'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Compute/availabilitySets",
            "apiVersion": "2016-04-30-preview",
            "location": "[resourceGroup().location]",
            "name": "[variables('windows-availabilitySet-name')]",
            "properties": {
                "platformFaultDomainCount": 2,
                "platformUpdateDomainCount": 5,
                "managed": true
            },
            "sku": {
                "name": "Aligned"
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2017-09-01",
            "location": "[resourceGroup().location]",
            "name": "[concat(variables('windows-virtualMachine-name-prefix'), copyindex(1), '-nic')]",
            "copy": {
                "name": "nicLoop",
                "count": "[parameters('windows-virtualMachine-count')]"
            },
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('subnet-id')]"
                            },
                            "applicationSecurityGroups": [
                                {
                                    "id": "[variables('jb-asg-id')]"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2017-03-30",
            "location": "[resourceGroup().location]",
            "name": "[concat(variables('windows-virtualMachine-name-prefix'), copyindex(1))]",
            "copy": {
                "name": "windowsVmLoop",
                "count": "[parameters('windows-virtualMachine-count')]"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Compute/availabilitySets', variables('windows-availabilitySet-name'))]",
                "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('windows-virtualMachine-name-prefix'), copyindex(1), '-nic'))]",
                "[resourceId('Microsoft.Storage/storageAccounts',parameters('storageAccount-name'))]"
            ],
            "properties": {
                "availabilitySet": {
                    "id": "[resourceId('Microsoft.Compute/availabilitySets', variables('windows-availabilitySet-name'))]"
                },
                "osProfile": {
                    "computerName": "[concat(parameters('extension-name'), '-win-vm',copyindex(1))]",
                    "adminUsername": "[parameters('admin-username')]",
                    "adminPassword": "[parameters('admin-password')]",
                    "secrets": "[if(equals(parameters('enable-encryption'), bool('false')), variables('empty-array'), parameters('encryption-secrets'))]"
                },
                "hardwareProfile": {
                    "vmSize": "[parameters('windows-virtualMachine-size')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[parameters('windows-os-image').publisher]",
                        "offer": "[parameters('windows-os-image').offer]",
                        "sku": "[parameters('windows-os-image').sku]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "name": "[replace(toLower(substring(concat(variables('windows-virtualMachine-name-prefix'), copyindex(1), '-osdisk', '-', replace(concat(variables('uniqueString'), variables('uniqueString')), '-', '')), 0, 40)), '-', '')]",
                        "osType": "[parameters('windows-os-type')]",
                        "createOption": "FromImage"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('windows-virtualMachine-name-prefix'), copyindex(1), '-nic'))]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true,
                        "storageUri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', parameters('storageAccount-name')), '2016-12-01').primaryEndpoints.blob)]"
                    }
                }
            },
            "resources": [
                {
                    "type": "extensions",
                    "name": "OMSExtension",
                    "apiVersion": "2015-06-15",
                    "location": "[resourceGroup().location]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Compute/virtualMachines', concat(variables('windows-virtualMachine-name-prefix'), copyindex(1)))]"
                    ],
                    "properties": {
                        "publisher": "Microsoft.EnterpriseCloud.Monitoring",
                        "type": "MicrosoftMonitoringAgent",
                        "typeHandlerVersion": "1.0",
                        "autoUpgradeMinorVersion": true,
                        "settings": {
                            "workspaceId": "[parameters('oms-workspace-id')]"
                        },
                        "protectedSettings": {
                            "workspaceKey": "[parameters('oms-primary-shared-key')]"
                        }
                    }
                },
                {
                    "type": "extensions",
                    "name": "[variables('antimalware-extension-name')]",
                    "apiVersion": "2017-03-30",
                    "location": "[resourceGroup().location]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Compute/virtualMachines', concat(variables('windows-virtualMachine-name-prefix'), copyindex(1)))]",
                        "[variables('mma-extension-name')]"
                    ],
                    "properties": {
                        "publisher": "Microsoft.Azure.Security",
                        "type": "IaaSAntimalware",
                        "typeHandlerVersion": "1.5",
                        "autoUpgradeMinorVersion": true,
                        "settings": {
                            "AntimalwareEnabled": true,
                            "RealtimeProtectionEnabled": "true",
                            "ScheduledScanSettings": {
                                "isEnabled": "true",
                                "scanType": "Quick",
                                "day": "7",
                                "time": "120"
                            }
                        }
                    }
                },
                {
                    "type": "extensions",
                    "name": "[variables('diagnostics-extension-name')]",
                    "apiVersion": "2017-12-01",
                    "location": "[resourceGroup().location]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Compute/virtualMachines', concat(variables('windows-virtualMachine-name-prefix'), copyindex(1)))]",
                        "[variables('antimalware-extension-name')]"
                    ],
                    "properties": {
                        "publisher": "Microsoft.Azure.Diagnostics",
                        "type": "IaaSDiagnostics",
                        "typeHandlerVersion": "1.5",
                        "autoUpgradeMinorVersion": true,
                        "settings": {
                            "StorageAccount": "[parameters('storageAccount-name')]",
                            "StorageType": "TableAndBlob",
                            "WadCfg": {
                                "DiagnosticMonitorConfiguration": {
                                    "overallQuotaInMB": 5120,
                                    "Metrics": {
                                        "resourceId": "[resourceId('Microsoft.Compute/virtualMachines', concat(variables('windows-virtualMachine-name-prefix'), copyindex(1)))]",
                                        "MetricAggregation": [
                                            {
                                                "scheduledTransferPeriod": "PT1H"
                                            },
                                            {
                                                "scheduledTransferPeriod": "PT1M"
                                            }
                                        ]
                                    },
                                    "DiagnosticInfrastructureLogs": {
                                        "scheduledTransferLogLevelFilter": "Error"
                                    },
                                    "PerformanceCounters": {
                                        "scheduledTransferPeriod": "PT1M",
                                        "PerformanceCounterConfiguration": [
                                            {
                                                "counterSpecifier": "\\Processor Information(_Total)\\% Processor Time",
                                                "unit": "Percent",
                                                "sampleRate": "PT60S"
                                            },
                                            {
                                                "counterSpecifier": "\\Processor Information(_Total)\\% Privileged Time",
                                                "unit": "Percent",
                                                "sampleRate": "PT60S"
                                            },
                                            {
                                                "counterSpecifier": "\\Processor Information(_Total)\\% User Time",
                                                "unit": "Percent",
                                                "sampleRate": "PT60S"
                                            },
                                            {
                                                "counterSpecifier": "\\Processor Information(_Total)\\Processor Frequency",
                                                "unit": "Count",
                                                "sampleRate": "PT60S"
                                            },
                                            {
                                                "counterSpecifier": "\\System\\Processes",
                                                "unit": "Count",
                                                "sampleRate": "PT60S"
                                            },
                                            {
                                                "counterSpecifier": "\\Process(_Total)\\Thread Count",
                                                "unit": "Count",
                                                "sampleRate": "PT60S"
                                            },
                                            {
                                                "counterSpecifier": "\\Process(_Total)\\Handle Count",
                                                "unit": "Count",
                                                "sampleRate": "PT60S"
                                            },
                                            {
                                                "counterSpecifier": "\\System\\System Up Time",
                                                "unit": "Count",
                                                "sampleRate": "PT60S"
                                            },
                                            {
                                                "counterSpecifier": "\\System\\Context Switches/sec",
                                                "unit": "CountPerSecond",
                                                "sampleRate": "PT60S"
                                            },
                                            {
                                                "counterSpecifier": "\\System\\Processor Queue Length",
                                                "unit": "Count",
                                                "sampleRate": "PT60S"
                                            },
                                            {
                                                "counterSpecifier": "\\Memory\\% Committed Bytes In Use",
                                                "unit": "Percent",
                                                "sampleRate": "PT60S"
                                            },
                                            {
                                                "counterSpecifier": "\\Memory\\Available Bytes",
                                                "unit": "Bytes",
                                                "sampleRate": "PT60S"
                                            },
                                            {
                                                "counterSpecifier": "\\Memory\\Committed Bytes",
                                                "unit": "Bytes",
                                                "sampleRate": "PT60S"
                                            },
                                            {
                                                "counterSpecifier": "\\Memory\\Cache Bytes",
                                                "unit": "Bytes",
                                                "sampleRate": "PT60S"
                                            },
                                            {
                                                "counterSpecifier": "\\Memory\\Pool Paged Bytes",
                                                "unit": "Bytes",
                                                "sampleRate": "PT60S"
                                            },
                                            {
                                                "counterSpecifier": "\\Memory\\Pool Nonpaged Bytes",
                                                "unit": "Bytes",
                                                "sampleRate": "PT60S"
                                            },
                                            {
                                                "counterSpecifier": "\\Memory\\Pages/sec",
                                                "unit": "CountPerSecond",
                                                "sampleRate": "PT60S"
                                            },
                                            {
                                                "counterSpecifier": "\\Memory\\Page Faults/sec",
                                                "unit": "CountPerSecond",
                                                "sampleRate": "PT60S"
                                            },
                                            {
                                                "counterSpecifier": "\\Process(_Total)\\Working Set",
                                                "unit": "Count",
                                                "sampleRate": "PT60S"
                                            },
                                            {
                                                "counterSpecifier": "\\Process(_Total)\\Working Set - Private",
                                                "unit": "Count",
                                                "sampleRate": "PT60S"
                                            },
                                            {
                                                "counterSpecifier": "\\LogicalDisk(_Total)\\% Disk Time",
                                                "unit": "Percent",
                                                "sampleRate": "PT60S"
                                            },
                                            {
                                                "counterSpecifier": "\\LogicalDisk(_Total)\\% Disk Read Time",
                                                "unit": "Percent",
                                                "sampleRate": "PT60S"
                                            },
                                            {
                                                "counterSpecifier": "\\LogicalDisk(_Total)\\% Disk Write Time",
                                                "unit": "Percent",
                                                "sampleRate": "PT60S"
                                            },
                                            {
                                                "counterSpecifier": "\\LogicalDisk(_Total)\\% Idle Time",
                                                "unit": "Percent",
                                                "sampleRate": "PT60S"
                                            },
                                            {
                                                "counterSpecifier": "\\LogicalDisk(_Total)\\Disk Bytes/sec",
                                                "unit": "BytesPerSecond",
                                                "sampleRate": "PT60S"
                                            },
                                            {
                                                "counterSpecifier": "\\LogicalDisk(_Total)\\Disk Read Bytes/sec",
                                                "unit": "BytesPerSecond",
                                                "sampleRate": "PT60S"
                                            },
                                            {
                                                "counterSpecifier": "\\LogicalDisk(_Total)\\Disk Write Bytes/sec",
                                                "unit": "BytesPerSecond",
                                                "sampleRate": "PT60S"
                                            },
                                            {
                                                "counterSpecifier": "\\LogicalDisk(_Total)\\Disk Transfers/sec",
                                                "unit": "BytesPerSecond",
                                                "sampleRate": "PT60S"
                                            },
                                            {
                                                "counterSpecifier": "\\LogicalDisk(_Total)\\Disk Reads/sec",
                                                "unit": "BytesPerSecond",
                                                "sampleRate": "PT60S"
                                            },
                                            {
                                                "counterSpecifier": "\\LogicalDisk(_Total)\\Disk Writes/sec",
                                                "unit": "BytesPerSecond",
                                                "sampleRate": "PT60S"
                                            },
                                            {
                                                "counterSpecifier": "\\LogicalDisk(_Total)\\Avg. Disk sec/Transfer",
                                                "unit": "Count",
                                                "sampleRate": "PT60S"
                                            },
                                            {
                                                "counterSpecifier": "\\LogicalDisk(_Total)\\Avg. Disk sec/Read",
                                                "unit": "Count",
                                                "sampleRate": "PT60S"
                                            },
                                            {
                                                "counterSpecifier": "\\LogicalDisk(_Total)\\Avg. Disk sec/Write",
                                                "unit": "Count",
                                                "sampleRate": "PT60S"
                                            },
                                            {
                                                "counterSpecifier": "\\LogicalDisk(_Total)\\Avg. Disk Queue Length",
                                                "unit": "Count",
                                                "sampleRate": "PT60S"
                                            },
                                            {
                                                "counterSpecifier": "\\LogicalDisk(_Total)\\Avg. Disk Read Queue Length",
                                                "unit": "Count",
                                                "sampleRate": "PT60S"
                                            },
                                            {
                                                "counterSpecifier": "\\LogicalDisk(_Total)\\Avg. Disk Write Queue Length",
                                                "unit": "Count",
                                                "sampleRate": "PT60S"
                                            },
                                            {
                                                "counterSpecifier": "\\LogicalDisk(_Total)\\% Free Space",
                                                "unit": "Percent",
                                                "sampleRate": "PT60S"
                                            },
                                            {
                                                "counterSpecifier": "\\LogicalDisk(_Total)\\Free Megabytes",
                                                "unit": "Count",
                                                "sampleRate": "PT60S"
                                            },
                                            {
                                                "counterSpecifier": "\\Network Interface(*)\\Bytes Total/sec",
                                                "unit": "BytesPerSecond",
                                                "sampleRate": "PT60S"
                                            },
                                            {
                                                "counterSpecifier": "\\Network Interface(*)\\Bytes Sent/sec",
                                                "unit": "BytesPerSecond",
                                                "sampleRate": "PT60S"
                                            },
                                            {
                                                "counterSpecifier": "\\Network Interface(*)\\Bytes Received/sec",
                                                "unit": "BytesPerSecond",
                                                "sampleRate": "PT60S"
                                            },
                                            {
                                                "counterSpecifier": "\\Network Interface(*)\\Packets/sec",
                                                "unit": "BytesPerSecond",
                                                "sampleRate": "PT60S"
                                            },
                                            {
                                                "counterSpecifier": "\\Network Interface(*)\\Packets Sent/sec",
                                                "unit": "BytesPerSecond",
                                                "sampleRate": "PT60S"
                                            },
                                            {
                                                "counterSpecifier": "\\Network Interface(*)\\Packets Received/sec",
                                                "unit": "BytesPerSecond",
                                                "sampleRate": "PT60S"
                                            },
                                            {
                                                "counterSpecifier": "\\Network Interface(*)\\Packets Outbound Errors",
                                                "unit": "Count",
                                                "sampleRate": "PT60S"
                                            },
                                            {
                                                "counterSpecifier": "\\Network Interface(*)\\Packets Received Errors",
                                                "unit": "Count",
                                                "sampleRate": "PT60S"
                                            }
                                        ]
                                    },
                                    "WindowsEventLog": {
                                        "scheduledTransferPeriod": "PT1M",
                                        "DataSource": [
                                            {
                                                "name": "Application!*[System[(Level = 1 or Level = 2 or Level = 3)]]"
                                            },
                                            {
                                                "name": "Security!*[System[band(Keywords,4503599627370496)]]"
                                            },
                                            {
                                                "name": "System!*[System[(Level = 1 or Level = 2 or Level = 3)]]"
                                            }
                                        ]
                                    }
                                }
                            }
                        },
                        "protectedSettings": {
                            "storageAccountName": "[parameters('storageAccount-name')]",
                            "storageAccountEndPoint": "https://core.windows.net/",
                            "storageAccountSasToken": "[parameters('storageAccount-sasToken')]"
                        }
                    }
                },
                {
                    "type": "extensions",
                    "name": "[variables('networkWatcher-extension-name')]",
                    "apiVersion": "2017-03-30",
                    "location": "[resourceGroup().location]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Compute/virtualMachines', concat(variables('windows-virtualMachine-name-prefix'), copyindex(1)))]"
                    ],
                    "properties": {
                        "publisher": "Microsoft.Azure.NetworkWatcher",
                        "type": "NetworkWatcherAgentWindows",
                        "typeHandlerVersion": "1.4",
                        "autoUpgradeMinorVersion": true
                    }
                },
                {
                    "type": "extensions",
                    "name": "[variables('encryption-extension-name')]",
                    "apiVersion": "2017-03-30",
                    "location": "[resourceGroup().location]",
                    "condition": "[equals(parameters('enable-encryption'), bool('true'))]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Compute/virtualMachines', concat(variables('windows-virtualMachine-name-prefix'), copyindex(1)))]",
                        "[resourceId('Microsoft.Compute/virtualMachines/extensions', concat(variables('windows-virtualMachine-name-prefix'), copyindex(1)), variables('antimalware-extension-name'))]",
                        "[resourceId('Microsoft.Compute/virtualMachines/extensions', concat(variables('windows-virtualMachine-name-prefix'), copyindex(1)), variables('diagnostics-extension-name'))]",
                        "[resourceId('Microsoft.Compute/virtualMachines/extensions', concat(variables('windows-virtualMachine-name-prefix'), copyindex(1)), variables('networkWatcher-extension-name'))]"
                    ],
                    "properties": {
                        "publisher": "Microsoft.Azure.Security",
                        "type": "AzureDiskEncryption",
                        "typeHandlerVersion": "1.1",
                        "autoUpgradeMinorVersion": true,
                        "forceUpdateTag": "1.0",
                        "settings": {
                            "AADClientID": "[parameters('aad-principal-id')]",
                            "AADClientCertThumbprint": "[parameters('aad-certificate-thumb')]",
                            "KeyVaultURL": "[parameters('kv-uri')]",
                            "KeyEncryptionKeyURL": "[parameters('jb-key')]",
                            "KeyEncryptionAlgorithm": "[variables('key-encryptionAlgorithm')]",
                            "VolumeType": "All",
                            "EncryptionOperation": "[variables('encryption-operation')]"
                        }
                    }
                }
            ]
        },
        {
            "name": "[concat('vm', copyindex(1), 'OSEncryptionNestedDeployment')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2016-09-01",
            "condition": "[equals(parameters('enable-encryption'), bool('true'))]",
            "dependsOn": [
                "windowsVmLoop"
            ],
            "copy": {
                "name": "vmWindowsEncryptLoop",
                "count": "[parameters('windows-virtualMachine-count')]"
            },
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {},
                    "resources": [
                        {
                            "apiVersion": "2017-03-30",
                            "type": "Microsoft.Compute/virtualMachines",
                            "name": "[concat(variables('windows-virtualMachine-name-prefix'), copyindex(1))]",
                            "location": "[resourceGroup().location]",
                            "condition": "[equals(parameters('enable-encryption'), bool('true'))]",
                            "properties": {
                                "storageProfile": {
                                    "osDisk": {
                                        "encryptionSettings": {
                                            "enabled": true,
                                            "diskEncryptionKey": {
                                                "sourceVault": {
                                                    "id": "[parameters('kv-id')]"
                                                },
                                                "secretUrl": "[if(equals(parameters('enable-encryption'), bool('false')), json('null'), reference(resourceId('Microsoft.Compute/virtualMachines/extensions',  concat(variables('windows-virtualMachine-name-prefix'), copyindex(1)), variables('encryption-extension-name'))).instanceView.statuses[0].message)]"
                                            },
                                            "keyEncryptionKey": {
                                                "sourceVault": {
                                                    "id": "[parameters('kv-id')]"
                                                },
                                                "keyUrl": "[parameters('jb-key')]"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    ]
                },
                "parameters": {}
            }
        },
        {
            "type": "Microsoft.Compute/availabilitySets",
            "apiVersion": "2016-04-30-preview",
            "location": "[resourceGroup().location]",
            "name": "[variables('linux-availabilitySet-name')]",
            "properties": {
                "platformFaultDomainCount": 2,
                "platformUpdateDomainCount": 5,
                "managed": true
            },
            "sku": {
                "name": "Aligned"
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2017-09-01",
            "location": "[resourceGroup().location]",
            "name": "[concat(variables('linux-virtualMachine-name-prefix'), copyindex(1), '-nic')]",
            "copy": {
                "name": "nicLoop",
                "count": "[parameters('linux-virtualMachine-count')]"
            },
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('subnet-id')]"
                            },
                            "applicationSecurityGroups": [
                                {
                                    "id": "[variables('jb-asg-id')]"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2017-03-30",
            "location": "[resourceGroup().location]",
            "name": "[concat(variables('linux-virtualMachine-name-prefix'), copyindex(1))]",
            "copy": {
                "name": "linuxVmLoop",
                "count": "[parameters('linux-virtualMachine-count')]"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Compute/availabilitySets', variables('linux-availabilitySet-name'))]",
                "[concat('Microsoft.Network/networkInterfaces/', concat(variables('linux-virtualMachine-name-prefix'), copyindex(1), '-nic'))]"
            ],
            "properties": {
                "availabilitySet": {
                    "id": "[resourceId('Microsoft.Compute/availabilitySets', variables('linux-availabilitySet-name'))]"
                },
                "osProfile": {
                    "computerName": "[concat(parameters('extension-name'), '-linux-vm',copyindex(1))]",
                    "adminUsername": "[parameters('admin-username')]",
                    "adminPassword": "[parameters('admin-password')]"
                },
                "hardwareProfile": {
                    "vmSize": "[parameters('linux-virtualMachine-size')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[parameters('linux-os-image').publisher]",
                        "offer": "[parameters('linux-os-image').offer]",
                        "sku": "[parameters('linux-os-image').sku]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "name": "[replace(toLower(substring(concat(variables('linux-virtualMachine-name-prefix'), copyindex(1), '-osdisk', '-', replace(concat(variables('uniqueString'), variables('uniqueString')), '-', '')), 0, 40)), '-', '')]",
                        "osType": "[parameters('linux-os-type')]",
                        "createOption": "FromImage"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('linux-virtualMachine-name-prefix'), copyindex(1), '-nic'))]",
                            "properties": {
                                "primary": true
                            }
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true,
                        "storageUri": "[concat(reference(parameters('storageAccount-resourceId'), '2016-12-01').primaryEndpoints.blob)]"
                    }
                }
            },
            "resources": [
                {
                    "type": "extensions",
                    "name": "[variables('mma-extension-name')]",
                    "apiVersion": "2018-06-01",
                    "location": "[resourceGroup().location]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Compute/virtualMachines', concat(variables('linux-virtualMachine-name-prefix'), copyindex(1)))]"
                    ],
                    "properties": {
                        "publisher": "Microsoft.EnterpriseCloud.Monitoring",
                        "type": "OmsAgentForLinux",
                        "typeHandlerVersion": "1.7",
                        "autoUpgradeMinorVersion": true,
                        "settings": {
                            "workspaceId": "[parameters('oms-workspace-id')]"
                        },
                        "protectedSettings": {
                            "workspaceKey": "[parameters('oms-primary-shared-key')]"
                        }
                    }
                },
                {
                    "type": "extensions",
                    "name": "[variables('diagnostics-extension-name')]",
                    "apiVersion": "2017-12-01",
                    "location": "[resourceGroup().location]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Compute/virtualMachines', concat(variables('linux-virtualMachine-name-prefix'), copyindex(1)))]",
                        "[variables('mma-extension-name')]"
                    ],
                    "properties": {
                        "publisher": "Microsoft.Azure.Diagnostics",
                        "type": "LinuxDiagnostic",
                        "typeHandlerVersion": "3.0",
                        "autoUpgradeMinorVersion": true,
                        "settings": {
                            "StorageAccount": "[parameters('storageAccount-name')]",
                            "StorageType": "TableAndBlob",
                            "sampleRateInSeconds": 15,
                            "ladCfg": {
                                "diagnosticMonitorConfiguration": {
                                    "performanceCounters": {
                                        "sinks": "MyMetricEventHub,MyJsonMetricsBlob",
                                        "performanceCounterConfiguration": [
                                            {
                                                "unit": "Percent",
                                                "type": "builtin",
                                                "counter": "PercentProcessorTime",
                                                "counterSpecifier": "/builtin/Processor/PercentProcessorTime",
                                                "annotation": [
                                                    {
                                                        "locale": "en-us",
                                                        "displayName": "Aggregate CPU %utilization"
                                                    }
                                                ],
                                                "condition": "IsAggregate=TRUE",
                                                "class": "Processor"
                                            },
                                            {
                                                "unit": "Bytes",
                                                "type": "builtin",
                                                "counter": "UsedSpace",
                                                "counterSpecifier": "/builtin/FileSystem/UsedSpace",
                                                "annotation": [
                                                    {
                                                        "locale": "en-us",
                                                        "displayName": "Used disk space on /"
                                                    }
                                                ],
                                                "condition": "Name=\"/\"",
                                                "class": "Filesystem"
                                            }
                                        ]
                                    },
                                    "metrics": {
                                        "metricAggregation": [
                                            {
                                                "scheduledTransferPeriod": "PT1H"
                                            },
                                            {
                                                "scheduledTransferPeriod": "PT1M"
                                            }
                                        ],
                                        "resourceId": "[resourceId('Microsoft.Compute/virtualMachines', concat(variables('linux-virtualMachine-name-prefix'), copyindex(1)))]"
                                    },
                                    "eventVolume": "Large",
                                    "syslogEvents": {
                                        "sinks": "SyslogJsonBlob,LoggingEventHub",
                                        "syslogEventConfiguration": {
                                            "LOG_USER": "LOG_INFO"
                                        }
                                    }
                                }
                            },
                            "perfCfg": [
                                {
                                    "query": "SELECT PercentProcessorTime, PercentIdleTime FROM SCX_ProcessorStatisticalInformation WHERE Name='_TOTAL'",
                                    "table": "LinuxCpu",
                                    "frequency": 60,
                                    "sinks": "LinuxCpuJsonBlob,LinuxCpuEventHub"
                                }
                            ],
                            "fileLogs": [
                                {
                                    "file": "/var/log/myladtestlog",
                                    "table": "MyLadTestLog",
                                    "sinks": "FilelogJsonBlob,LoggingEventHub"
                                }
                            ]
                        }
                    },
                    "protectedSettings": {
                        "storageAccountName": "[parameters('storageAccount-name')]",
                        "storageAccountEndPoint": "https://core.windows.net/",
                        "storageAccountSasToken": "[parameters('storageAccount-sasToken')]"
                    }
                },
                {
                    "type": "extensions",
                    "name": "[concat('linux-', variables('networkWatcher-extension-name'))]",
                    "apiVersion": "2017-03-30",
                    "location": "[resourceGroup().location]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Compute/virtualMachines', concat(variables('linux-virtualMachine-name-prefix'), copyindex(1)))]",
                        "OMSExtension"
                    ],
                    "properties": {
                        "publisher": "Microsoft.Azure.NetworkWatcher",
                        "type": "NetworkWatcherAgentLinux",
                        "typeHandlerVersion": "1.4",
                        "autoUpgradeMinorVersion": true
                    }
                }
            ]
        }
    ],
    "outputs": {}
}